#include <sys/types.h>
#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>

//Для создания нового экземпляра кольцевого буфе-
//ра внутри операционной системы используется системный вызов
//pipe()

// Важное отличие pipа от файла заключается в том, что прочитанная
// информация немедленно удаляется из него и не может быть прочитана
// повторно.

int main()
{
    int     fd[2];
    ssize_t size;
    char    string[] = "Hello, world!";
    char    resstring[14];

    // Создаем канал
    // Системный вызов pipe создает новый экземпляр кольцевого буфера внутри операционной системы
    if(pipe(fd) < 0)
    {
        printf("Can\'t open pipe\n");
        exit(-1);
    }

    // Записываем строку в выходной конец канала (fd[1])
    size = write(fd[1], string, 14);

    // Если запись не удалась или было записано не все, выводим сообщение об ошибке и завершаем программу
    if(size != 14)
    {
        printf("Can\'t write all string to pipe\n");
        exit(-1);
    }

    // Читаем строку из канала
    // Мы читаем из входного конца канала (fd[0])
    size = read(fd[0], resstring, 14);

    // Если чтение не удалось, выводим сообщение об ошибке и завершаем программу
    if(size < 0)
    {
        printf("Can\'t read string from pipe\n");
        exit(-1);
    }

    // Выводим прочитанную строку
    printf("%s\n", resstring);

    // Закрываем входной и выходной концы канала
    close(fd[0]);
    close(fd[1]);

    return 0;
}
